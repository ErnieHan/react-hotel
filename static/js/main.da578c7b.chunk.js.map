{"version":3,"sources":["images/index_pic_7.jfif","images/logo-black.25b6dfd5.svg","function/getCookie.js","function/writeCookie.js","store/actions/index.js","pages/HomePage.js","pages/AboutPage.js","pages/Page404.js","components/Register/Register-css.js","components/Login/index.js","pages/LoginPage.js","components/Register/index.js","pages/RegisterPage.js","components/Header/Header-css.js","components/Header/index.js","App.js","serviceWorker.js","store/reducers/app/updateTheme.js","store/reducers/app/login.js","store/reducers/app/memberInfo.js","store/reducers/app/language.js","store/reducers/app/index.js","store/reducers/index.js","store/index.js","i18n.js","index.js"],"names":["module","exports","getCookie","name","parts","document","cookie","split","length","pop","shift","writeCookie","data","toString","login","bool","type","updateMemberInfo","dispatch","a","saveMemberInfo","changeLanguage","language","HomePage","src","indexImage","style","width","alt","Component","AboutPage","Page404","Content","styled","div","Title","h2","SubTitle","Grid","ResignButton","button","LoginButton","Login","state","phoneNumber","password","handleChange","e","target","value","setState","securityPassword","base64","encode","url","encodeURI","fetch","then","respone","json","feed","entry","Error","memberInfo","props","memberId","gsx$id","$t","localStorage","setItem","history","push","console","log","alert","this","t","onChange","placeholder","onClick","withLang","withTranslation","withRouterLogin","withRouter","connect","isLogin","app","LoginPage","getItem","Register","memberData","gender","mail","updateMemberListData","handleChangeMemberData","editedData","submitMemberData","list","Object","keys","every","date","Date","id","getTime","newData","credentials","headers","method","mode","RegisterPage","header","Left","Center","Right","Buttom","Item","SubItem","Header","logout","window","location","removeItem","goHomePage","i18n","getMemberInfoSuccessfully","className","logoImage","gsx$name","to","withRouterHeader","getLoginSuccessfully","App","getUserId","fetchMember","cookie_language","exact","path","React","memberID","Boolean","hostname","match","initialState","getThemeSuccessfully","themeName","active","reducers","combineReducers","index","action","updateTheme","themeColors","createStore","composeWithDevTools","applyMiddleware","thunk","resources","en","translation","zhTW","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da578c7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index_pic_7.4d5752d0.jfif\";","module.exports = __webpack_public_path__ + \"static/media/logo-black.25b6dfd5.25b6dfd5.svg\";","const getCookie = name => {\n  var value = '; ' + document.cookie;\n  var parts = value.split('; ' + name + '=');\n  if (parts.length === 2) {\n    return parts\n      .pop()\n      .split(';')\n      .shift();\n  }\n};\n\nexport default getCookie;\n","//name : type string\nconst writeCookie = (name, data) => {\n  document.cookie = name.toString() + '=' + data + ';path=/';\n  return;\n};\n\nexport default writeCookie;\n","import getCookie from \"../../function/getCookie\";\nimport writeCookie from \"../../function/writeCookie\";\n\n// 基本型\nexport const setApp = () => {\n  return {\n    type: \"SET_APP\"\n  };\n};\n\n// 呼叫其他 action 型\nexport const selectLv1Option = index => async dispatch => {\n  await dispatch(setApp(index));\n};\n\n// 執行多件 function 型\nexport const fetchProduct = cbu => async dispatch => {\n  fetch(`/shopping/v1/compositions/productDetails/info/${cbu}`, {\n    credentials: \"include\",\n    headers: { \"content-type\": \"application/json\" },\n    mode: \"cors\"\n  })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n    });\n};\n\nconst primaryTheme = {\n  background: \"#FFFFFF\",\n  textColor: \"#000000\",\n  button: \"red\"\n};\n\nconst darkTheme = {\n  background: \"#2F2F2F\",\n  textColor: \"#CCCCCC\",\n  button: \"darkred\"\n};\n\nexport const readThemeCookie = () => dispatch => {\n  // 更換網站介面顏色\n  const theme_cookie = getCookie(\"theme\");\n  if (!theme_cookie) {\n    // 1. 預設主題顏色為亮色\n    writeCookie(\"theme\", \"primary\");\n    const themeName = \"primary\";\n    const themeColors = primaryTheme;\n    dispatch(updateTheme(themeName, themeColors));\n  } else {\n    // 1. 抓取目前的主題顏色\n    const themeName = getCookie(\"theme\");\n    const themeColors = themeName === \"primary\" ? primaryTheme : darkTheme;\n    dispatch(updateTheme(themeName, themeColors));\n  }\n};\n\nexport const changeTheme = themeName => dispatch => {\n  if (themeName === \"primary\") {\n    const themeColors = primaryTheme;\n    writeCookie(\"theme\", themeName);\n    dispatch(updateTheme(themeName, themeColors));\n  } else {\n    const themeColors = darkTheme;\n    writeCookie(\"theme\", themeName);\n    dispatch(updateTheme(themeName, themeColors));\n  }\n};\n\nexport const updateTheme = (themeName, themeColors) => {\n  return {\n    type: \"UPDATE_THEME\",\n    themeName,\n    themeColors\n  };\n};\n\nexport const login = bool => {\n  return { type: \"LOGIN\", bool };\n};\n\nexport const updateMemberInfo = data => async dispatch => {\n  // 1.登入成功\n  dispatch(login(true));\n  // 2.儲存會員資料\n  dispatch(saveMemberInfo(data));\n};\n\nexport const saveMemberInfo = data => {\n  return { type: \"SAVE_MEMBER_INFO\", data };\n};\n\nexport const fetchMember = memberID => async dispatch => {\n  const url = `https://spreadsheets.google.com/feeds/list/1frbwI55o0vd9Sj5kROoG_Wagntqjc_gy7kNZFL2buKo/1/public/values?alt=json&sq=id=${memberID}`;\n  try {\n    await fetch(url)\n      .then(respone => respone.json())\n      .then(data => {\n        if (data.feed.entry) {\n          const memberInfo = data.feed.entry[0];\n          dispatch(updateMemberInfo(memberInfo));\n        } else {\n          throw new Error(\"無此會員資料\");\n        }\n      });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const changeLanguage = language => {\n  return { type: \"CHANGE_LANGUAGE\", language };\n};\n","import React, { Component } from \"react\";\nimport indexImage from \"../images/index_pic_7.jfif\";\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div>\n        <img src={indexImage} style={{ width: \"100%\" }} alt=\"\" />\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\n\nexport class AboutPage extends Component {\n  render() {\n    return (\n      <div>\n        <h1>About Page</h1>\n      </div>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React, { Component } from \"react\";\n\nexport class Page404 extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Page404</h1>\n      </div>\n    );\n  }\n}\n\nexport default Page404;\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.div`\r\n  max-width: 480px;\r\n  margin: 35px auto;\r\n  padding: 20px;\r\n  background: #f4f4f4;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const SubTitle = styled.div`\r\n  font-size: 0.85rem;\r\n  color: #ccc;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  margin-bottom: 2rem;\r\n  grid-template-columns: 1fr 2fr;\r\n  grid-row-gap: 1rem;\r\n  font-size: 0.85rem;\r\n  font-weight: bold;\r\n  div {\r\n    padding: 0.5rem;\r\n  }\r\n  input {\r\n    padding: 0.5rem;\r\n    border: 0;\r\n    border-bottom: 1px solid #111;\r\n    font-size: 0.85rem;\r\n    font-weight: bold;\r\n    background: transparent;\r\n    &::placeholder {\r\n      color: #ccc;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n  select {\r\n    padding: 0.5rem;\r\n    border: 1px solid #111;\r\n    background: transparent;\r\n    border-radius: 0;\r\n  }\r\n  @media screen and (max-width: 991px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const ResignButton = styled.button`\r\n  background: #4a5c68;\r\n  color: white;\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  margin-bottom: 1rem;\r\n  border: 0;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport const LoginButton = styled.button`\r\n  background: #bc937c;\r\n  color: white;\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  margin-bottom: 1rem;\r\n  border: 0;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Content,\r\n  Title,\r\n  Grid,\r\n  ResignButton,\r\n  LoginButton\r\n} from \"../Register/Register-css.js\";\r\nimport base64 from \"base-64\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, updateMemberInfo } from \"../../store/actions\";\r\nimport { Translation } from \"react-i18next\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    phoneNumber: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  login = async () => {\r\n    const { phoneNumber, password } = this.state;\r\n    const securityPassword = base64.encode(password);\r\n    if (phoneNumber && password) {\r\n      const url = encodeURI(\r\n        `https://spreadsheets.google.com/feeds/list/1frbwI55o0vd9Sj5kROoG_Wagntqjc_gy7kNZFL2buKo/1/public/values?alt=json&sq=password=${securityPassword} and phonenumber=\"${phoneNumber}\"`\r\n      );\r\n      try {\r\n        await fetch(url)\r\n          .then(respone => respone.json())\r\n          .then(data => {\r\n            if (data.feed.entry) {\r\n              // 登入成功\r\n              // 1. 儲存會員資料\r\n              const memberInfo = data.feed.entry[0];\r\n              this.props.updateMemberInfo(memberInfo);\r\n              // 2. 將會員id存在localStorage\r\n              const memberId = memberInfo.gsx$id.$t;\r\n              localStorage.setItem(\"user\", memberId);\r\n              // 3. 跳轉頁面\r\n              this.props.history.push(\"/\");\r\n            } else {\r\n              throw new Error(\"登入失敗\");\r\n            }\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n        alert(\"登入失敗\");\r\n      }\r\n    } else {\r\n      alert(\"請填寫完整的資料\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { phoneNumber, password } = this.state;\r\n    const { t } = this.props;\r\n    return (\r\n      <Content>\r\n        <Title>\r\n          <Translation>{t => <>{t(\"signInPage.title\")}</>}</Translation>\r\n        </Title>\r\n        <form onChange={this.handleChange}>\r\n          <Grid>\r\n            <div>\r\n              <Translation>{t => <>{t(\"signInPage.mobile\")}</>}</Translation>\r\n            </div>\r\n            <input name=\"phoneNumber\" value={phoneNumber} />\r\n            <div>\r\n              <Translation>{t => <>{t(\"signInPage.password\")}</>}</Translation>\r\n            </div>\r\n            <input\r\n              placeholder={t(\"signInPage.format\")}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n            ></input>\r\n          </Grid>\r\n        </form>\r\n        <LoginButton onClick={this.login}>\r\n          <Translation>{t => <>{t(\"signInPage.loginButton\")}</>}</Translation>\r\n        </LoginButton>\r\n        <ResignButton>\r\n          <Translation>{t => <>{t(\"signInPage.registerNow\")}</>}</Translation>\r\n        </ResignButton>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\n\r\nconst withLang = withTranslation()(Login);\r\nconst withRouterLogin = withRouter(withLang);\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogin: state.app.login.isLogin,\r\n  memberInfo: state.app.memberInfo.memberInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    login: bool => {\r\n      dispatch(login(bool));\r\n    },\r\n    updateMemberInfo: data => {\r\n      dispatch(updateMemberInfo(data));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouterLogin);\r\n","import React, { Component } from \"react\";\r\nimport Login from \"../components/Login\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass LoginPage extends Component {\r\n  componentDidMount() {\r\n    // 判斷是否為已登入狀態\r\n    const getUserID = localStorage.getItem(\"user\");\r\n    if (getUserID) {\r\n      // 如果已登入，就跳轉頁面\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Login />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Content,\r\n  Title,\r\n  SubTitle,\r\n  Grid,\r\n  ResignButton,\r\n  LoginButton\r\n} from \"./Register-css\";\r\nimport base64 from \"base-64\";\r\nimport { Translation } from \"react-i18next\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    login: false,\r\n    memberData: {\r\n      name: \"\",\r\n      gender: \"female\",\r\n      phoneNumber: \"\",\r\n      mail: \"\",\r\n      password: \"\"\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    // 1. 取得會員資料\r\n    // this.updateMemberListData();\r\n  }\r\n\r\n  updateMemberListData = async () => {\r\n    const url =\r\n      \"https://spreadsheets.google.com/feeds/list/1frbwI55o0vd9Sj5kROoG_Wagntqjc_gy7kNZFL2buKo/1/public/values?alt=json\";\r\n    await fetch(url)\r\n      .then(respone => respone.json())\r\n      .then(data => {\r\n        console.log(data.feed.entry);\r\n      });\r\n  };\r\n\r\n  handleChangeMemberData = e => {\r\n    const { name, value } = e.target;\r\n    const editedData = {\r\n      ...this.state.memberData,\r\n      [name]: value\r\n    };\r\n    this.setState({\r\n      memberData: editedData\r\n    });\r\n  };\r\n\r\n  submitMemberData = async () => {\r\n    const list = Object.keys(this.state.memberData);\r\n    const checked = list.every(data => this.state.memberData[data] !== \"\");\r\n    if (checked) {\r\n      const {\r\n        name,\r\n        gender,\r\n        password,\r\n        mail,\r\n        phoneNumber\r\n      } = this.state.memberData;\r\n      const securityPassword = base64.encode(password);\r\n      const date = new Date();\r\n      const id = date.getTime();\r\n      const url =\r\n        \"https://docs.google.com/forms/d/e/1FAIpQLSf21ipzy6pO_N5iHpiPqvrhV9T6158UH_2aMlwHPbzULAHJoA/formResponse\";\r\n      const newData = `${url}?entry.1040801526=${name}&entry.656116715=${id}&entry.321914295=${gender}&entry.1202087412=${mail}&entry.1735527987=${securityPassword}&entry.2087413777=${phoneNumber}&submit=Submit`;\r\n      await fetch(newData, {\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"content-type\": \"application/json\"\r\n        },\r\n        method: \"GET\",\r\n        mode: \"no-cors\"\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { gender, name, phoneNumber, password, mail } = this.state.memberData;\r\n    const { t } = this.props;\r\n    return (\r\n      <Content>\r\n        <Title>\r\n          <Translation>{t => <>{t(\"signUpPage.title\")}</>}</Translation>\r\n        </Title>\r\n        <SubTitle>\r\n          <Translation>{t => <>{t(\"signUpPage.subtitle\")}</>}</Translation>\r\n        </SubTitle>\r\n        <form onChange={this.handleChangeMemberData}>\r\n          <Grid>\r\n            <div>\r\n              <Translation>\r\n                {t => <>{t(\"signUpPage.salutation\")}</>}\r\n              </Translation>\r\n            </div>\r\n            <select name=\"gender\" value={gender}>\r\n              <option value=\"female\">{t(\"signUpPage.miss\")}</option>\r\n              <option value=\"male\">{t(\"signUpPage.mr\")}</option>\r\n            </select>\r\n            <div>\r\n              <Translation>{t => <>{t(\"signUpPage.name\")}</>}</Translation>\r\n            </div>\r\n            <input\r\n              placeholder={t(\"signUpPage.profile\")}\r\n              name=\"name\"\r\n              value={name}\r\n            />\r\n            <div>\r\n              <Translation>{t => <>{t(\"signUpPage.mobile\")}</>}</Translation>\r\n            </div>\r\n            <input name=\"phoneNumber\" value={phoneNumber} />\r\n            <div>\r\n              <Translation>{t => <>{t(\"signUpPage.email\")}</>}</Translation>\r\n            </div>\r\n            <input name=\"mail\" value={mail} />\r\n            <div>\r\n              <Translation>{t => <>{t(\"signUpPage.password\")}</>}</Translation>\r\n            </div>\r\n            <input\r\n              placeholder={t(\"signUpPage.format\")}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n            ></input>\r\n          </Grid>\r\n        </form>\r\n        <ResignButton onClick={this.submitMemberData}>\r\n          <Translation>{t => <>{t(\"signUpPage.submit\")}</>}</Translation>\r\n        </ResignButton>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(Register);\r\n","import React, { Component } from \"react\";\r\nimport Register from \"../components/Register\";\r\n\r\nclass RegisterPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Register />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.header`\r\n  padding: 60px 0 40px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  font-size: 0.85rem;\r\n`;\r\n\r\nexport const Left = styled.div`\r\n  order: 1;\r\n  width: 33.33%;\r\n  i {\r\n    font-size: 18px;\r\n  }\r\n  @media screen and (max-width: 991px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nexport const Center = styled.div`\r\n  order: 2;\r\n  width: 33.33%;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  img {\r\n    max-width: 285px;\r\n  }\r\n  @media screen and (max-width: 991px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nexport const Right = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  order: 3;\r\n  width: 33.33%;\r\n  text-align: right;\r\n  i {\r\n    font-size: 20px;\r\n  }\r\n  span {\r\n    margin: 0 5px;\r\n    &:hover {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n  @media screen and (max-width: 991px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nexport const Buttom = styled.div`\r\n  order: 4;\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  margin: 0 10px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 1px;\r\n    height: 80%;\r\n    position: absolute;\r\n    background: #111;\r\n    top: 10%;\r\n    right: -10px;\r\n  }\r\n  &:last-child {\r\n    &::after {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SubItem = styled.div`\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Content,\r\n  Left,\r\n  Right,\r\n  Center,\r\n  Buttom,\r\n  Item,\r\n  SubItem\r\n} from \"./Header-css\";\r\nimport logoImage from \"../../images/logo-black.25b6dfd5.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, changeLanguage } from \"../../store/actions\";\r\nimport { Translation } from \"react-i18next\";\r\nimport i18n from \"i18next\";\r\nimport writeCookie from \"../../function/writeCookie\";\r\n\r\nclass Header extends Component {\r\n  logout = () => {\r\n    window.location = \"./\";\r\n    localStorage.removeItem(\"user\");\r\n    this.props.login(false);\r\n  };\r\n\r\n  goHomePage = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  changeLanguage = () => {\r\n    // 判斷目前的語系\r\n    const { language, changeLanguage } = this.props;\r\n    if (language === \"zhTW\") {\r\n      // 切換為英文\r\n      writeCookie(\"language\", \"en\");\r\n      i18n.changeLanguage(\"en\");\r\n      changeLanguage(\"en\");\r\n    } else {\r\n      // 切換為中文\r\n      writeCookie(\"language\", \"zhTW\");\r\n      i18n.changeLanguage(\"zhTW\");\r\n      changeLanguage(\"zhTW\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isLogin,\r\n      memberInfo,\r\n      getMemberInfoSuccessfully,\r\n      language\r\n    } = this.props;\r\n    return (\r\n      <Content>\r\n        <Left>\r\n          TW / NTD$ | <i className=\"fas fa-map-marker-alt\" />\r\n        </Left>\r\n        <Center onClick={this.goHomePage}>\r\n          <img src={logoImage} alt=\"\" />\r\n        </Center>\r\n        <Right>\r\n          {isLogin ? (\r\n            <Item>\r\n              <Translation>{t => <>{t(\"header.hello\")}</>}</Translation>,\r\n              {getMemberInfoSuccessfully && memberInfo.gsx$name.$t}\r\n            </Item>\r\n          ) : (\r\n            <Item>\r\n              <Link to=\"/login\">\r\n                <span>\r\n                  <Translation>{t => <>{t(\"header.login\")}</>}</Translation>\r\n                </span>\r\n              </Link>\r\n              /\r\n              <Link to=\"/register\">\r\n                <span>\r\n                  <Translation>{t => <>{t(\"header.register\")}</>}</Translation>\r\n                </span>\r\n              </Link>\r\n            </Item>\r\n          )}\r\n          <Item>\r\n            <i className=\"fas fa-heart\" />\r\n          </Item>\r\n          <Item>\r\n            <i className=\"fas fa-shopping-bag\" />\r\n          </Item>\r\n          <Item onClick={this.changeLanguage}>\r\n            {language === \"zhTW\" ? \"繁\" : \"EN\"}\r\n          </Item>\r\n          {isLogin && (\r\n            <Item onClick={this.logout}>\r\n              <Translation>{t => <>{t(\"header.logout\")}</>}</Translation>\r\n            </Item>\r\n          )}\r\n        </Right>\r\n        <Buttom>\r\n          <SubItem>\r\n            <Translation>{t => <>{t(\"header.spotlight\")}</>}</Translation>\r\n          </SubItem>\r\n          <SubItem>\r\n            <Translation>{t => <>{t(\"header.collections\")}</>}</Translation>\r\n          </SubItem>\r\n          <SubItem>\r\n            <Translation>{t => <>{t(\"header.jewellery\")}</>}</Translation>\r\n          </SubItem>\r\n          <SubItem>\r\n            <Translation>{t => <>{t(\"header.services\")}</>}</Translation>\r\n          </SubItem>\r\n        </Buttom>\r\n      </Content>\r\n    );\r\n  }\r\n}\r\n\r\nconst withRouterHeader = withRouter(Header);\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogin: state.app.login.isLogin,\r\n  getLoginSuccessfully: state.app.login.getLoginSuccessfully,\r\n  memberInfo: state.app.memberInfo.memberInfo,\r\n  getMemberInfoSuccessfully: state.app.memberInfo.getMemberInfoSuccessfully,\r\n  language: state.app.language.language\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    login: bool => {\r\n      dispatch(login(bool));\r\n    },\r\n    changeLanguage: language => {\r\n      dispatch(changeLanguage(language));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouterHeader);\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { login, fetchMember, changeLanguage } from \"./store/actions\";\n// i18n\n// import { Translation } from \"react-i18next\";\n// import i18n from \"i18next\";\n// Router\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n// Pages\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport Page404 from \"./pages/Page404\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\n// Components\nimport Header from \"./components/Header\";\nimport styled from \"styled-components\";\nimport i18n from \"i18next\";\nimport getCookie from \"./function/getCookie\";\nimport writeCookie from \"./function/writeCookie\";\n\nconst Content = styled.div`\n  padding: 0 40px;\n  @media screen and (max-width: 991px) {\n    padding: 0 15px;\n  }\n`;\n\nclass App extends React.Component {\n  componentDidMount() {\n    const getUserId = localStorage.getItem(\"user\");\n    if (getUserId) {\n      // 瀏覽器中有userID 執行登入\n      this.props.fetchMember(getUserId);\n    } else {\n      // 沒有則 執行未登入\n      this.props.login(false);\n    }\n    const cookie_language = getCookie(\"language\");\n    const { changeLanguage } = this.props;\n    if (!cookie_language) {\n      // 初始時先預設語系為中文\n      writeCookie(\"language\", \"zhTW\");\n    } else {\n      // 如果Cookie有語系的話 則判斷要切換為哪一個語系\n      if (cookie_language === \"zhTW\") {\n        i18n.changeLanguage(\"zhTW\");\n        changeLanguage(\"zhTW\");\n      } else {\n        i18n.changeLanguage(\"en\");\n        changeLanguage(\"en\");\n      }\n    }\n  }\n  render() {\n    const { getLoginSuccessfully } = this.props;\n    return (\n      <div>\n        {getLoginSuccessfully && (\n          <Router>\n            <Content>\n              <Header />\n              <Switch>\n                <Route exact path=\"/\">\n                  <HomePage />\n                </Route>\n                <Route path=\"/login\">\n                  <LoginPage />\n                </Route>\n                <Route path=\"/register\">\n                  <RegisterPage />\n                </Route>\n                <Route path=\"/about\">\n                  <AboutPage />\n                </Route>\n                <Route path=\"*\">\n                  <Page404 />\n                </Route>\n              </Switch>\n            </Content>\n          </Router>\n        )}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  setApp: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isLogin: state.app.login.isLogin,\n  getLoginSuccessfully: state.app.login.getLoginSuccessfully\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: bool => {\n      dispatch(login(bool));\n    },\n    fetchMember: memberID => {\n      dispatch(fetchMember(memberID));\n    },\n    changeLanguage: language => {\n      dispatch(changeLanguage(language));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  getThemeSuccessfully: false,\n  themeName: \"primary\"\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_THEME\":\n      return {\n        ...state,\n        getThemeSuccessfully: true,\n        themeName: action.themeName,\n        themeColors: action.themeColors\n      };\n\n    default:\n      return state;\n  }\n};\n","const initialState = {\r\n  isLogin: false,\r\n  getLoginSuccessfully: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        isLogin: action.bool,\r\n        getLoginSuccessfully: true\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  memberInfo: null,\r\n  getMemberInfoSuccessfully: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SAVE_MEMBER_INFO\":\r\n      return {\r\n        ...state,\r\n        memberInfo: action.data,\r\n        getMemberInfoSuccessfully: true\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  language: \"zhTW\"\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_LANGUAGE\":\r\n      return {\r\n        ...state,\r\n        language: action.language\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\nimport updateTheme from \"./updateTheme\";\nimport login from \"./login\";\nimport memberInfo from \"./memberInfo\";\nimport language from \"./language\";\n\nconst initialState = {\n  active: true\n};\n\nconst index = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_APP\":\n      return {\n        ...state,\n        active: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst reducers = combineReducers({\n  index,\n  updateTheme,\n  login,\n  memberInfo,\n  language\n});\n\nexport default reducers;\n","import { combineReducers } from \"redux\";\n// import * as ActionTypes from \"../actionTypes\";\nimport app from \"./app\";\n\nconst reducers = combineReducers({\n  app\n});\n\nexport default reducers;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport reducers from \"./reducers\";\n\nexport default createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport en from \"./locales/en.json\";\nimport tw from \"./locales/zhTW.json\";\n\nconst resources = {\n  en: {\n    translation: en\n  },\n  zhTW: {\n    translation: tw\n  }\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: \"zhTW\", //預設語言\n  fallbackLng: \"zhTW\", //如果當前切換的語言沒有對應的翻譯則使用這個語言，\n  interpolation: {\n    escapeValue: false\n  }\n});\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n// 載入i18n語言包設定\nimport \"./i18n\";\n// 解決 IE 瀏覽器問題的套件\nimport \"babel-polyfill\";\nimport \"isomorphic-fetch\";\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport \"core-js/features/promise\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}